Making a new installation USB
sudo dd bs=4M if=path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync

Erasing the disk before we begin.(Either way works but I would skip down to parted way and just create new parttion table and then reboot.)

First method is with gdisk
gdisk /dev/sda
x
z
This method is with sgdisk in a single command.
sgdisk -Z /dev/sda (destroy and the GPT and MBR data structures) 
sgdisk -z /dev/sda ( To only remove the GPT data structures ) Use the first one for clean installs. Where the -Z and -z is that may be supposed to be --z and --Z I can not rememeber. Use command below to check if it worked.

Make sure it is erased
sgdisk -p /dev/sda

Erasing the partitons if you didn't do it the other way up top.

parted /dev/sda

print ( to see existing partitons)

rm 1 ( remove partiton 1)

rm 2

rm 3

!Or you can just do this and skip all info above. That is three ways to erase you disk and start new. I use parted magic about 1 once a year on SSD to regain performance. I have a free download link.

Creating a new partiton table.
parted dev/sda mklabel gpt  ( And that one command clean all data and create a new gpt)

partprobe or reboot

Creating the boot partition
mkpart primary fat32 1MiB 257MiB
set 1 esp on

Create swap 
mkpart primary linux-swap 257MiB 1GiB

Creating root
mkpart primary ext4 1GiB 51GiB

Creating home
mkpart primary ext4 51GiB 82% ( I leave for over provisioning but you can go to 90%

print   (List the partitons)

Check alignment
parted /dev/sda
align-check optimal 1
align-check optimal 2
align-check optimal 3
align-check optimal 4
quit

swapon /dev/sda2

partprobe ( to make it find the new partitons without rebooting or reboot)


### Format Disk ###### If you used parted above then this is not necessary because you formatted as you went but you need to activate swap with command above.

mkfs.fat -F32 /dev/sda1
mkswap /dev/sda2
swapon /dev/sda2
mkfs.ext4 /dev/sda3
mkfs.ext4 /dev/sda4

Connect to internet

Wifi-menu 

Update the clock
timedatectl set-ntp true
timedatectl status

pacman -Syu

### Mount Partitions ###

Mount /dev/sda2 /mnt
mkdir /mnt/boot /mnt/home
mkdir /mnt/home
Mount /dev/sda1 /mnt/boot
mount /dev/sda3 /mnt/home

### get the fastest mirrors ###

Install reflector with sudo pacman -S reflector

backup mirrorlist
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup

You can use any number you like instead of 100. That is the number of mirrors you will have.
You can also cahnge from http first to https first 

sudo reflector --latest 100 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist

#### Pacstrap Arch #####
pacstrap - i /mnt base base-devel

### Generate fstab ###
genfstab -U -p /mnt >> /mnt/etc/fstab

nano /mnt/etc/fstab

## Chroot into arch ##
arch-chroot /mnt

### Language ###
nano /etc/locale.gen
Uncomment en_US.UTF-8

## Generate the locale ##
locale-gen

### Set it as your language ###
1  echo LANG=en_US.UTF-8 > /etc/locale.conf
2  export LANG=en_US.UTF-8

### Time ###
Type 
ln -sf /usr/share/zoneinfo/ and hit tab and sometimes you must hit tab twice on my PC and
it will show you a list of countries. When you find you desired country then type for and example
ln -sf /usr/share/zoneinfo/America/
and hit tab again and it will show a list of cities and when you find your proper time zone then type it like this and hit enter
ln -sf /usr/share/zoneinfo/America/Chicago  /etc/localtime

set hardware clock to utc
hwclock --systohc --utc

### Hostname ###
echo archpc > /etc/hostname

### Enable multilib ###
nano /etc/pacman.conf
### Uncomment this ####
[multilib]
Include = /etc/pacman.d/mirrorlist

### Update mirrors ###
pacman Syu

## Set password for root ##
passwd

### Add default user to the groups with ###

useradd -m -g users -G wheel,storage,power -s /bin/bash josh

## Set password for the user ##

passwd josh

## Setting sudoers ###

EDITOR=nano visudo

Uncomment the %wheel ALL=(ALL) ALL

###Install a couple packages #### ( leave intel-ucode off if you have AMD )
pacman -S bash-completion
pacman -S intel-ucode

mount -t efivarfs efivarfs /sys/firmware/efi/efivars
This should say already mounted but we are just checking 

I use systemd boot because it is easier,faster and it just works

bootctl install

### Create conf for boot loader ### ( leave initrd /intel-ucode.img if you have AMD )
nano /boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img

#### Add PARTUUID of thr ROOT partiton to our boot loader confifuration
if you need to check run lsblk and find the one that has /
Change sda2 to whatever your root is

echo "options root=PARTUUID=$(blkid -s PARTUUID -o value /dev/sda2) rw quiet nmi_watchdog=0" >> /boot/loader/entries/arch.conf

nano /boot/loader/entries/arch.conf ( just to check if correctly added)

pacman -S dialog wireless_tools wpa_supplicant

### Unmount #####

exit
umount -R /mnt
reboot

#### Install Packages and desktop ####
Connect to wifi-menu
sudo pacman -Syu reflector
sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
sudo reflector --latest 100 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist

sudo pacman -Syu

sudo pacman -S xorg xorg-server 

sudo pacman -S (xf86-video-intel--not recomended but works pretty well but I don't) intel-media-driver xf86-video-fbdev libva-utils

sudo pacman -S sddm

sudo pacman -S plasma

sudo pacman -S dolphin kate konsole ark gwenview xdg-user-dirs xf86-input-synaptics spectacle git kompare kwalletmanager gtk-engine-murrine gtk-engines ksystemlog sweeper sassc python-cairo rsync

Set your enviroment variable for your intel-media-driver and disable QT logs
sudo nano /etc/environment 
#LIBVA_DRIVERS_PATH=/usr/lib/dri/iHD_drv_video.so (This is not working for me)
LIBVA_DRIVER_NAME=iHD
QT_LOGGING_RULES='*=false'


If you use Discover Software Center then that is fine but there is NO need for it in Arch Linux.If you use it then also install this or NO applications will show up:
 packagekit-qt5
Remove the discover software center if your like me and have no use for it.
sudo pacman -Rns discover

If you installed xf86-video-intel do this if not skip
sudo nano /etc/X11/xorg.conf.d/20-intel.conf

Section "Device"
   Identifier  "Intel Graphics"
   Driver      "intel"                  
EndSection


Enable kms on intel graphics and huc and guc
sudo echo "echo \"options i915 modeset=1 enable_guc=2\" >> /etc/modprobe.d/i915.conf" | sudo bash

enable early kms
sudo nano /etc/mkinitcpio.conf

add this to the file just like this
MODULES=(i915)

sudo mkinitcpio -p linux

sudo bootctl update

enable huc and guc firmware loading
sudo echo "echo \"options i915 enable_guc=2\" >> /etc/modprobe.d/i915.conf" | sudo bash

If you installed synaptics driver
sudo cp -r /usr/share/X11/xorg.conf.d/70-synaptics.conf /etc/X11/xorg.conf.d/50-synaptics.conf

sudo systemctl enable sddm.service

sudo systemctl set-default graphical.target
reboot

Or we can use the echo "exec startkde" > ~/.xinitrc

sudo pacman -S networkmanager 
sudo systemctl enable NetworkManager.service

REBOOT---MAKE SURE YOUR READY

Confirm guc andn guc 
sudo cat /sys/kernel/debug/dri/0/i915_huc_load_status
sudo cat /sys/kernel/debug/dri/0/i915_guc_load_status

Confirm modeset
sudo cat /sys/module/i915/parameters/modeset
You should get a 1 back

Check your iHD enviroment variable is set by running
printenv
You should see LIBVA_DRIVER_NAME=iHD listed the vaiables along with the QT_LOGGING_RULES info
environment vaiables are in the list.

Then run this to see that hardware acceleration is set up properly
vainfo

You should see
vainfo: VA-API version: 1.4 (libva 2.4.1)
vainfo: Driver version: Intel iHD driver - 1.0.0
vainfo: Supported profile and entrypoints
and more stuff but you get the gist

performance
sudo nano /etc/fstab
add noatime and commit=90 to root and home

"Do not add noexec because you will be building makepkg in tmpfs"

tmpfs                   /tmp                                    tmpfs        noatime,nodev,nosuid      0 0

reboot

Set hooks
sudo mkdir /etc/pacman.d/hooks

sudo nano /etc/pacman.d/hooks/100-systemd-boot.hook
[Trigger]
Type = Package
Operation = Upgrade
Target = systemd

[Action]
Description = Updating systemd-boot
When = PostTransaction
Exec = /usr/bin/bootctl update


sudo nano /etc/pacman.d/hooks/mirrorupgrade.hook
[Trigger]
Operation = Upgrade
Type = Package
Target = pacman-mirrorlist

[Action]
Description = Updating pacman-mirrorlist with reflector and removing pacnew...
When = PostTransaction
Depends = reflector 
Exec = /usr/bin/env sh -c "reflector --latest 100 --protocol http --protocol https --sort rate  --save /etc/pacman.d/mirrorlist; if [[ -f /etc/pacman.d/mirrorlist.pacnew ]]; then rm /etc/pacman.d/mirrorlist.pacnew; fi"

Build packages in the tmpfs you just created
sudo nano /etc/makepkg.conf
uncomment MAKEFLAGS= and add it like this MAKEFLAGS="-j$(nproc)"
change build directory to tmpfs but remember to make sure you have it mounted without noexec
uncomment BUILDDIR=/tmp/makepkg
Change COMPRESSXZ=(xz -c -z -) to COMPRESSXZ=(xz -c -z - --threads=0)
also change where packages are kept after they are built by uncommenting 
PKGDEST=~/home/packages and make a folder in your home directory to store your packages. I changed mine to PKGDEST=~/.make-build
Don't forget to actually make the folder named .make-build in home directory.

Install pamac-aur
git clone https://aur.archlinux.org/pamac-aur.git
cd pamac-aur
makepkg -sic
exit
sudo rm -r pamac-aur

set .build as build directory

install pacmac-tray-appindicator with pamac

install the microsoft fonts that are in this folder
Check the name because I think there has been an update to the fonts.
sudo pacman -U ttf-ms-win10-10.0.17763.1-1-any.pkg.tar.xz

Install chromium-vaapi-bin
chromium-widevine

set flags in .config with file name
chromium-flags.config and add these just like this

--enable-accelerated-mjpeg-decode
--enable-accelerated-video
--ignore-gpu-blacklist
--enable-gpu-rasterization
--enable-native-gpu-memory-buffers
--enable-zero-copy
--enable-quic
--enable-memory-coordinator
--enable-font-cache-scaling
--enable-parallel-downloading


Start chromium and log in and then close

sudo nano /etc/fstab

tmpfs                /home/josh/.cache/chromium/Default   tmpfs           noatime,nodev,nosuid        0 0

reboot and chromium cache will be in ram

Fix performance.
sudo echo "echo \"vm.dirty_writeback_centisecs = 6000\" >> /etc/sysctl.d/99-sysctl.conf" | sudo bash;sudo echo "echo \"vm.dirty_background_ratio = 20\" >> /etc/sysctl.d/99-sysctl.conf" | sudo bash;sudo echo "echo \"vm.dirty_ratio = 40\" >> /etc/sysctl.d/99-sysctl.conf" | sudo bash;sudo echo "echo \"vm.vfs_cache_pressure = 50\" >> /etc/sysctl.d/99-sysctl.conf" | sudo bash;sudo echo "echo \"vm.swappiness = 10\" >> /etc/sysctl.d/99-sysctl.conf" | sudo bash

sudo nano /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf

[connection]
wifi.powersave =2

sudo nano /etc/modprobe.d/blacklist.conf

#blacklist the speaker module to stop beeps
blacklist pcspkr

#Blacklist know watchdog modules for faster /boot/shutdown
blacklist iTCO_wdt
blacklist iTCO_vendor_support

#Disable webcam
blacklist uvcvideo

#Disable Bluetooth
blacklist btusb
blacklist bluetooth

#Disable joystick driver
blacklist joydev

sudo systemctl enable fstrim.timer

Limit journal size
sudo nano /etc/systemd/journald.conf
systemmaxuse=200M
systemmaxfilesize=50M


Disable the blinking damn light on laptop.
sudo echo "echo \"options iwlwifi led_mode=1\" >> /etc/modprobe.d/iwlwifi.conf" | sudo bash

Disable touchscreen
sudo nano /usr/share/X11/xorg.conf.d/40-libinput.conf
Add the line that says option "ignore" "on"

ScrSection "InputClass"
        Identifier "libinput touchscreen catchall"
        MatchIsTouchscreen "on"
        MatchDevicePath "/dev/input/event*"
        Driver "libinput"
        Option "ignore" "on"  #Disable touchscreen
EndSection

Cleanup
sudo pacman -Sc && sudo pacman -Rns $(pacman -Qtdq)
find -xtype l -print
find -xtype l -delete

Trim disk
Entire disk
sudo fstrim -av
Or sep partitons
sudo fstrim -v /
sudo fstrim -v /home


Stop KDE from showing bookmarks in the kickoff menu.

$ mkdir ~/.local/share/kservices5
$ sed 's/EnabledByDefault=true$/EnabledByDefault=false/' /usr/share/kservices5/plasma-runner-bookmarks.desktop > ~/.local/share/kservices5/plasma-runner-bookmarks.desktop

Cleanup
sudo pacman -Sc && sudo pacman -Rns $(pacman -Qtdq)
find -xtype l -print
find -xtype l -delete

Rebuild the cache using the following commands:

$ rm ~/.config/Trolltech.conf
$ kbuildsycoca5 --noincremental

Optionally, empty the ~/.cache/ folder contents, however, this will also clear the cache of other applications:

$ rm -rf ~/.cache/*

Discover does not show any applications ?
This can be solved by installing packagekit-qt5.


How to hide folders from the home directory to slim amount of folders down some.
.config user-dir.dirs and /etc/xdg/user-dirs.defaults

How to back up Arch Linux.
Backup with
sudo rsync -aAXv --delete --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/tmp/* --exclude=/run/* --exclude=/mnt/* --exclude=/media/* --exclude="lost+found" --exclude=".ecryptfs" / /run/media/josh/Backup/


Restore
Open terminal during boot process 
Ctrl + Alt + F5 or F6 ( This is different for other laptops I think)
rsync -aAXv --delete --exclude="lost+found" /mnt/usb/ /mnt/system/
As a last resort, boot with the Arch Linux Installation CD and mount the root filesystem on /


export LIBVA_DRIVERS_PATH=/usr/lib/dri/iHD_drv_video.so
export LIBVA_DRIVER_NAME=iHD

